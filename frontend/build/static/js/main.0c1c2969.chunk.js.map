{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","actions/productActions.js","components/Message.js","components/Loader.js","components/Paginate.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productTopRated","productReviewCreate","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userUpdate","userDelete","userList","users","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","placeholder","className","onChange","target","value","Button","variant","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","prototype","PropTypes","string","isRequired","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","listProducts","pageNumber","listProductDetails","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","err","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","errorProductReview","successProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","num","itemsPrice","shippingPrice","taxPrice","Math","round","index","createOrder","OrderScreen","orderId","loadingPay","successPay","loadingDeliver","successDeliver","sdkReady","setSdkReady","pushState","addPaypalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","successCreate","errorCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","header","console","updateProduct","File","custom","OrderListScreen","App","path","component","loginScreen","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0c1c2969.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productToRatedReducer\n} from './reducers/productReducers.js';\nimport { cartReducer } from './reducers/cartReducers';\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer\n} from './reducers/userReducers.js';\n\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderListMyReducer,\n  orderListReducer,\n  orderDeliverReducer\n} from './reducers/orderReducers.js';\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productTopRated: productToRatedReducer,\n  productReviewCreate: productReviewCreateReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userUpdate: userUpdateReducer,\n  userDelete: userDeleteReducer,\n  userList: userListReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  orderDeliver: orderDeliverReducer\n});\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : [];\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {};\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: { userInfo: userInfoFromStorage }\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_CREATE_REVIEW_FAIL\n} from '../constants/productConstants';\n\nimport {\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL\n} from '../constants/productConstants';\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] };\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page\n      };\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { loading: true, ...state };\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload };\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true };\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true };\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload };\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_CREATE_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true };\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload };\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_UPDATE_RESET:\n      return {\n        product: {}\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true };\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true };\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const productToRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true, products: [] };\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload };\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL';\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_ADD_ITEM_RESET\n} from '../constants/cartConstants';\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map(x =>\n            x.product === existItem.product ? item : x\n          )\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(\n          item => item.product !== action.payload\n        )\n      };\n    case CART_ADD_ITEM_RESET:\n      return {\n        cartItems: []\n      };\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload\n      };\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\nexport const CART_ADD_ITEM_RESET = 'CART_ADD_ITEM_RESET';\n\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_RESET,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_LOGOUT,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL\n} from '../constants/userConstants.js';\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true };\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload };\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_DETAILS_RESET:\n      return { user: {} };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload };\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true };\n    case USER_LIST_SUCCESS:\n      return { loading: false, success: true, users: action.payload };\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LIST_RESET:\n      return { users: [] };\n    default:\n      return state;\n  }\n};\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true };\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true };\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_UPDATE_RESET: //\n      return { user: {} };\n    default:\n      return state;\n  }\n};\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\nexport const USER_LOGOUT = 'USER_LOGIN';\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_RESET,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_RESET\n} from '../constants/orderConstants';\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return { loading: true };\n    case ORDER_CREATE_SUCCESS:\n      return { loading: false, success: true, order: action.payload };\n    case ORDER_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return { ...state, loading: true };\n    case ORDER_DETAILS_SUCCESS:\n      return { loading: false, order: action.payload };\n    case ORDER_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true\n      };\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n    case ORDER_PAY_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true\n      };\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n    case ORDER_DELIVER_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        loading: true\n      };\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload\n      };\n    case ORDER_LIST_MY_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n    case ORDER_LIST_MY_RESET:\n      return {\n        orders: []\n      };\n    default:\n      return state;\n  }\n};\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true\n      };\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload\n      };\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST';\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS';\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL';\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET';\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\nexport const ORDER_LIST_RESET = 'ORDER_LIST_RESET';\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\n","import axios from 'axios';\nimport {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_LOGOUT,\n  USER_DETAILS_RESET\n} from '../constants/userConstants.js';\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nimport { CART_ADD_ITEM_RESET } from '../constants/cartConstants';\n\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: ORDER_LIST_MY_RESET });\n  dispatch({ type: CART_ADD_ITEM_RESET });\n  dispatch({ type: USER_LIST_RESET });\n};\n\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    const { data } = await axios.get(`/api/users/${id}`, config);\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    const { data } = await axios.put(`/api/users/profile`, user, config);\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    const { data } = await axios.get(`/api/users`, config);\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    await axios.delete(`/api/users/${id}`, config);\n\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\n\n    dispatch({\n      type: USER_UPDATE_SUCCESS\n    });\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n","import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nconst SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState('');\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`);\n    } else {\n      history.push('/');\n    }\n  };\n\n  return (\n    <Form onSubmit={submitHandler} inline>\n      <Form.Control\n        type=\"text\"\n        name=\"q\"\n        placeholder=\"Search Product...\"\n        className=\"mr-sm-2 ml-sm-5\"\n        onChange={e => setKeyword(e.target.value)}\n      ></Form.Control>\n      <Button type=\"submit\" variant=\"outline-success\" className=\"p-2\">\n        Search\n      </Button>\n    </Form>\n  );\n};\n\nexport default SearchBox;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\nimport { logout } from '../actions/userActions';\nimport SearchBox from './SearchBox';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector(state => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>ProShop</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Route render={({ history }) => <SearchBox history={history} />} />\n            <Nav className=\"ml-auto\">\n              <LinkContainer to=\"/cart\">\n                <Nav.Link>\n                  <i className=\"fas fa-shopping-cart\"></i> Cart\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <i className=\"fas fa-user\"></i> Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\n                  <LinkContainer to=\"/admin/userlist\">\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/admin/productlist\">\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/admin/orderlist\">\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">Copyright &copy; Proshop</Col>\n        </Row>\n      </Container>\n      r\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className=\"rating\">\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? 'fas fa-star'\n              : value >= 0.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? 'fas fa-star'\n              : value >= 1.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? 'fas fa-star'\n              : value >= 2.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? 'fas fa-star'\n              : value >= 3.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? 'fas fa-star'\n              : value >= 4.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span> {text ? text : ''}</span>\n    </div>\n  );\n};\n\nRating.defaultProps = {\n  color: '#f8e825'\n};\n\nRating.prototype = {\n  value: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string\n};\n\nexport default Rating;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Rating from '../components/Rating';\n\nconst Product = ({ product }) => {\n  return (\n    <Card className=\"my-3 p-3 rounder\">\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} variant=\"top\" />\n      </Link>\n\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as=\"div\">\n            <strong>{product.name}</strong>{' '}\n          </Card.Title>\n        </Link>\n        <Card.Text as=\"div\">\n          <Rating\n            value={product.rating}\n            text={`${product.numReviews} reviews`}\n          />\n        </Card.Text>\n\n        <Card.Text as=\"h3\">${product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Product;\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_FAIL,\n  PRODUCT_TOP_SUCCESS\n} from '../constants/productConstants';\nimport axios from 'axios';\n\nexport const listProducts = (\n  keyword = '',\n  pageNumber = ''\n) => async dispatch => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n\n    const { data } = await axios.get(\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n    );\n\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        err.response && err.response.data.message\n          ? err.response.data.message\n          : err.message\n    });\n  }\n};\n\nexport const listProductDetails = id => async dispatch => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/products/${id}`);\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        err.response && err.response.data.message\n          ? err.response.data.message\n          : err.message\n    });\n  }\n};\n\nexport const deleteProduct = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    await axios.delete(`/api/products/${id}`, config);\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    const { data } = await axios.post(`/api/products`, {}, config);\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const updateProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    );\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    await axios.post(`/api/products/${productId}/reviews`, review, config);\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const listTopProducts = () => async dispatch => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST });\n\n    const { data } = await axios.get(`/api/products/top`);\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        err.response && err.response.data.message\n          ? err.response.data.message\n          : err.message\n    });\n  }\n};\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>;\n};\n\nMessage.defaultProps = {\n  variant: 'info'\n};\n\nexport default Message;\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation=\"border\"\n      role=\"status\"\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block'\n      }}\n    >\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport { Pagination } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map(x => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  );\n};\n\nexport default Paginate;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Carousel, Image } from 'react-bootstrap';\nimport Loader from './Loader';\nimport Message from './Message';\nimport { listTopProducts } from '../actions/productActions';\n\nconst ProductCarousel = () => {\n  const dispatch = useDispatch();\n  const productTopRated = useSelector(state => state.productTopRated);\n  const { loading, error, products } = productTopRated;\n\n  useEffect(() => {\n    dispatch(listTopProducts());\n  }, [dispatch]);\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <Carousel pause=\"hover\" className=\"bg-dark\">\n      {products.map(product => (\n        <Carousel.Item key={product._id}>\n          <Link to={`/product/${product._id}`}>\n            <Image src={product.image} alt={product.name} fluid />\n            <Carousel.Caption className=\"carousel-caption\">\n              <h2>\n                {product.name}(${product.price})\n              </h2>\n            </Carousel.Caption>\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  );\n};\n\nexport default ProductCarousel;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nfunction Meta({ title, description, keywords }) {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"keywords\" content={keywords} />\n    </Helmet>\n  );\n}\n\nMeta.defaultProps = {\n  title: 'Welcome to ProShop',\n  description: 'We sell best products for cheap',\n  keywords: 'electronics, cheap electronics,buy electronics'\n};\n\nexport default Meta;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Row, Col } from 'react-bootstrap';\nimport Product from '../components/Product';\nimport { listProducts } from '../actions/productActions';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport Paginate from '../components/Paginate';\nimport ProductCarousel from '../components/ProductCarousel';\nimport Meta from '../components/Meta';\n\nconst HomeScreen = ({ match }) => {\n  const keyword = match.params.keyword;\n  const pageNumber = match.params.pageNumber || 1;\n\n  const dispatch = useDispatch();\n\n  const productList = useSelector(state => state.productList);\n  const { loading, err, products, page, pages } = productList;\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber));\n  }, [dispatch, keyword, pageNumber]);\n\n  return (\n    <>\n      <Meta />\n      {!keyword ? (\n        <ProductCarousel />\n      ) : (\n        <Link to=\"/\" className=\"btn btn-light\">\n          Go back\n        </Link>\n      )}\n      <h1>Latest products</h1>\n      {loading ? (\n        <Loader />\n      ) : err ? (\n        <Message variant=\"danger\">{err}</Message>\n      ) : (\n        <Row>\n          {products.map(product => (\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n              <Product product={product} />\n            </Col>\n          ))}\n        </Row>\n      )}\n      <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\n    </>\n  );\n};\n\nexport default HomeScreen;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button,\n  Form\n} from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport {\n  listProductDetails,\n  createProductReview\n} from '../actions/productActions';\nimport Loader from '../components/Loader';\nimport Meta from '../components/Meta';\nimport Message from '../components/Message.js';\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState('');\n\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const { loading, err, product } = productDetails;\n\n  const productReviewCreate = useSelector(state => state.productReviewCreate);\n  const {\n    error: errorProductReview,\n    success: successProductReview\n  } = productReviewCreate;\n\n  const userLogin = useSelector(state => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (successProductReview) {\n      alert('Review submitted');\n      setRating(0);\n      setComment('');\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_RESET\n      });\n    }\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match, successProductReview]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment\n      })\n    );\n  };\n\n  return (\n    <>\n      <Link className=\"btn btn-light my-3 \" to=\"/\">\n        Go back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : err ? (\n        <Message variant=\"danger\">{err}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} />\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: {product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? 'In Stock' : 'Out of stock'}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>QTY</Col>\n                        <Col>\n                          <Form.Control\n                            as=\"select\"\n                            value={qty}\n                            onChange={e => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(x => (\n                              <option key={x + 1} value={x + 1}>\n                                {x + 1}\n                              </option>\n                            ))}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      className=\"btn-block\"\n                      type=\"button\"\n                      disabled={product.countInStock === 0}\n                      onClick={addToCartHandler}\n                    >\n                      Add to cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No reviews</Message>}\n              <ListGroup variant=\"flush\">\n                {product.reviews.map(review => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a customer review</h2>\n                  {errorProductReview && (\n                    <Message variant=\"danger\">{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId=\"rating\">\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          value={rating}\n                          onChange={e => setRating(e.target.value)}\n                        >\n                          <option value=\"\">Select...</option>\n                          <option value=\"1\">1 - Poor</option>\n                          <option value=\"2\">2- Fair</option>\n                          <option value=\"3\">3 - Good</option>\n                          <option value=\"4\">4 - Very Good</option>\n                          <option value=\"5\">5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId=\"comment\">\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          row=\"3\"\n                          value={comment}\n                          onChange={e => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button type=\"submit\" variant=\"primary\">\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to=\"/login\">Sign in</Link>to write a review\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProductScreen;\n","import axios from 'axios';\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD\n} from '../constants/cartConstants';\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`);\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty\n    }\n  });\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeFromCart = id => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  });\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const savaShippingAddress = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  });\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\n\nexport const savePaymentMethod = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  });\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport { Link } from 'react-router-dom';\nimport {\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Form,\n  Button,\n  Card\n} from 'react-bootstrap';\nimport { addToCart, removeFromCart } from '../actions/cartActions';\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id;\n\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n\n  const dispatch = useDispatch();\n\n  const cart = useSelector(state => state.cart);\n\n  const { cartItems } = cart;\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  const removeFromCartHandler = id => {\n    dispatch(removeFromCart(id));\n  };\n\n  const checkoutHandler = () => {\n    history.push('/login?redirect=shipping');\n  };\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Your car is empty <Link to=\"/\">Go back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant=\"flush\">\n            {cartItems.map(item => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/products/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}>{item.price}</Col>\n                  <Col md={2}>\n                    <Form.Control\n                      as=\"select\"\n                      value={item.qty}\n                      onChange={e =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map(x => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type=\"button\"\n                      variant=\"light\"\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                items\n              </h2>\n              $\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type=\"button\"\n                className=\"btn-block\"\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Proceed To Checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CartScreen;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader.js';\nimport { login } from '../actions/userActions';\nimport FormContainer from '../components/FormContainer';\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    //Dispatch login\n\n    dispatch(login(email, password));\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign in</h1>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email..\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password..\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          New Customer?{' '}\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default LoginScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader.js';\nimport { register } from '../actions/userActions';\nimport FormContainer from '../components/FormContainer';\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector(state => state.userRegister);\n\n  const { loading, error, userInfo } = userRegister;\n\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    //Dispatch register\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords is not matched');\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign up</h1>\n      {message && <Message variant=\"danger\">{message}</Message>}\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"name\"\n            placeholder=\"Enter name..\"\n            value={name}\n            onChange={e => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email..\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password..\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Confirm password..\"\n            value={confirmPassword}\n            onChange={e => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Register\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          Have an account?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default RegisterScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader.js';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport { listMyOrders } from '../actions/orderActions';\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector(state => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userLogin = useSelector(state => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n\n  const orderListMy = useSelector(state => state.orderListMy);\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    //Dispatch register\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords is not matched');\n    } else {\n      //dispatch update profile\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\n    }\n  };\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {error && <Message variant=\"danger\">{error}</Message>}\n        {success && <Message variant=\"success\">Profile updated</Message>}\n\n        {loading && <Loader />}\n\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"name\"\n              placeholder=\"Enter name..\"\n              value={name}\n              onChange={e => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email..\"\n              value={email}\n              onChange={e => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter password..\"\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm password..\"\n              value={confirmPassword}\n              onChange={e => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\">\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant=\"danger\">{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map(order => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                    )}\n                  </td>{' '}\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button variant=\"light\" className=\"btn-sm\">\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProfileScreen;\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL\n} from '../constants/orderConstants';\nimport axios from 'axios';\n\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    const { data } = await axios.post(`/api/orders`, order, config);\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    const { data } = await axios.get(`/api/orders/${id}`, config);\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    );\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const deliverOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    );\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    const { data } = await axios.get(`/api/orders/myorders`, config);\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    const { data } = await axios.get(`/api/orders/`, config);\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className=\"justify-content-center mb=4\">\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to=\"/login\">\n            <Nav.Link>Sign In</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to=\"/shipping\">\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to=\"/payment\">\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to=\"/placeorder\">\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  );\n};\n\nexport default CheckoutSteps;\n","import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport { savaShippingAddress } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector(state => state.cart);\n\n  const { shippingAddress } = cart;\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    dispatch(savaShippingAddress({ address, city, postalCode, country }));\n\n    history.push('/payment');\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter address..\"\n            value={address}\n            required\n            onChange={e => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter city..\"\n            value={city}\n            required\n            onChange={e => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"postalCode\">\n          <Form.Label>Postal code</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter postal code..\"\n            value={postalCode}\n            required\n            onChange={e => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"country\">\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter country..\"\n            value={country}\n            required\n            onChange={e => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default ShippingScreen;\n","import React, { useState } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { savePaymentMethod } from '../actions/cartActions';\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector(state => state.cart);\n\n  const { shippingAddress } = cart;\n\n  if (!shippingAddress) {\n    history.push('/shipping');\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState('PayPal');\n\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    dispatch(savePaymentMethod(paymentMethod));\n\n    history.push('/placeorder');\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as=\"legend\">Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type=\"radio\"\n              label=\"PayPal or Credit Card\"\n              id=\"PayPal\"\n              name=\"paymentMethod\"\n              value=\"PayPal\"\n              checked\n              onChange={e => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n\n            {/* <Form.Check\n              type=\"radio\"\n              label=\"Stripe\"\n              id=\"Stripe\"\n              name=\"paymentMethod\"\n              value=\"Stripe\"\n              checked\n              onChange={e => setPaymentMethod(e.target.value)}\n            ></Form.Check> */}\n          </Col>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default PaymentScreen;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message.js';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { createOrder } from '../actions/orderActions.js';\n\nconst PlaceOrderScreen = ({ history }) => {\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n\n  const addDecimals = num => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n\n  // Calculate prices\n\n  cart.itemsPrice = cart.cartItems.reduce(\n    (acc, item) => acc + item.price * item.qty,\n    0\n  );\n\n  cart.shippingPrice = cart.itemsPrice > 100 ? 0 : 100;\n\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\n\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2);\n\n  const orderCreate = useSelector(state => state.orderCreate);\n  const { order, success, error } = orderCreate;\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n    }\n    // eslint-disable-next-line\n  }, [history, success]);\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice\n      })\n    );\n  };\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address:</strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},\n                {cart.shippingAddress.postalCode},{cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment method:</h2>\n              <p>\n                <strong>Method: </strong>\n                {cart.paymentMethod}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order items: :</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items: </Col>\n                  <Col>${cart.itemsPrice} </Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Button\n                  type=\"button\"\n                  className=\"btn-block\"\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default PlaceOrderScreen;\n","import React, { useEffect, useState } from 'react';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message.js';\nimport Loader from '../components/Loader';\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder\n} from '../actions/orderActions.js';\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET\n} from '../constants/orderConstants.js';\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id;\n  const dispatch = useDispatch();\n\n  const orderPay = useSelector(state => state.orderPay);\n  const { loading: loadingPay, success: successPay } = orderPay;\n\n  const orderDeliver = useSelector(state => state.orderDeliver);\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\n\n  const userLogin = useSelector(state => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const orderDetails = useSelector(state => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  if (!loading) {\n    const addDecimals = num => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    // Calculate prices\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    );\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.pushState('/login');\n    }\n\n    const addPaypalScript = async () => {\n      const { data: clientId } = await axios.get('/api/config/paypal');\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.async = true;\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n\n      document.body.appendChild(script);\n    };\n\n    if (!order || successPay || successDeliver) {\n      dispatch({\n        type: ORDER_PAY_RESET\n      });\n      dispatch({\n        type: ORDER_DELIVER_RESET\n      });\n      if (!order || order._id !== orderId) {\n        dispatch(getOrderDetails(orderId));\n      }\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPaypalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [order, orderId, dispatch, successPay, successDeliver, userInfo, history]);\n\n  const successPaymentHandler = paymentResult => {\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = order => {\n    dispatch(deliverOrder(order));\n  };\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <>\n      {' '}\n      <h1>Order {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong>\n                {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>\n\n                <a href={`mailto=${order.user.email}`}>{order.user.email}</a>\n              </p>\n\n              <p>\n                <strong>Address: </strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city},\n                {order.shippingAddress.postalCode},\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant=\"success\"></Message>\n              ) : (\n                <Message variant=\"danger\">Not delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment method:</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant=\"danger\">Not paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order items: :</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Order is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items: </Col>\n                  <Col>${order.itemsPrice} </Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n              {loadingDeliver && <Loader />}\n              {userInfo &&\n                userInfo.isAdmin &&\n                order.isPaid &&\n                !order.isDelivered && (\n                  <ListGroup.Item>\n                    <Button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={deliverHandler}\n                    >\n                      Mark as delivered\n                    </Button>\n                  </ListGroup.Item>\n                )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default OrderScreen;\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader.js';\nimport { listUsers, deleteUser } from '../actions/userActions';\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const userList = useSelector(state => state.userList);\n  const { loading, users, error } = userList;\n\n  const userLogin = useSelector(state => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDelete = useSelector(state => state.userDelete);\n  const { success: successDelete } = userDelete;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, successDelete, userInfo]);\n\n  const deleteHandler = id => {\n    if (window.confirm('Are you sure?')) {\n      dispatch(deleteUser(id));\n    }\n  };\n\n  return (\n    <div>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map(user => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className=\"fas fa-check\" style={{ color: 'green' }} />\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: 'red' }} />\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n\n                  <Button\n                    variant=\"danger\"\n                    className=\"btn-sm\"\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </div>\n  );\n};\n\nexport default UserListScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader.js';\nimport { getUserDetails, updateUser } from '../actions/userActions';\nimport FormContainer from '../components/FormContainer';\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id;\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector(state => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = userUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: USER_UPDATE_RESET\n      });\n      history.push('/admin/userlist');\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [user, dispatch, userId, successUpdate, history]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\n  };\n\n  return (\n    <>\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\n        Go back\n      </Link>\n      <FormContainer>\n        <h1>Edit user</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{error}</Message>}\n\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter name..\"\n                value={name}\n                onChange={e => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email..\"\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"isAdmin\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"is Admin\"\n                checked={isAdmin}\n                onChange={e => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default UserEditScreen;\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader.js';\nimport Paginate from '../components/Paginate';\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct\n} from '../actions/productActions';\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\n\nconst ProductListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1;\n  const dispatch = useDispatch();\n\n  const productList = useSelector(state => state.productList);\n  const { loading, products, error, page, pages } = productList;\n\n  const productDelete = useSelector(state => state.productDelete);\n  const {\n    loading: loadingDelete,\n    success: successDelete,\n    error: errorDelete\n  } = productDelete;\n\n  const userLogin = useSelector(state => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const productCreate = useSelector(state => state.productCreate);\n  const {\n    loading: loadingCreate,\n    success: successCreate,\n    error: errorCreate,\n    product: createdProduct\n  } = productCreate;\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET });\n\n    if (!userInfo.isAdmin) {\n      history.push('/login');\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`);\n    } else {\n      dispatch(listProducts('', pageNumber));\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber\n  ]);\n\n  const deleteHandler = id => {\n    if (window.confirm('Are you sure?')) {\n      //delete products\n      dispatch(deleteProduct(id));\n    }\n  };\n\n  const createProductHandler = () => {\n    dispatch(createProduct());\n  };\n\n  return (\n    <div>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className=\"text-right\">\n          <Button className=\"my-3\" onClick={createProductHandler}>\n            <i className=\"fas fa-plus\"></i> Create product\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map(product => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>${product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant=\"light\" className=\"btn-sm\">\n                        <i className=\"fas fa-edit\"></i>\n                      </Button>\n                    </LinkContainer>\n\n                    <Button\n                      variant=\"danger\"\n                      className=\"btn-sm\"\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ProductListScreen;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader.js';\nimport { listProductDetails, updateProduct } from '../actions/productActions';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\nimport FormContainer from '../components/FormContainer';\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id;\n\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState(0);\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector(state => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET });\n      history.push('/admin/productlist');\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.email);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [product, dispatch, productId, history, successUpdate]);\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n\n    formData.append('image', file);\n    setUploading(true);\n\n    try {\n      const config = {\n        header: {\n          'Content-type': 'multipart/form-data'\n        }\n      };\n      const { data } = await axios.post('/api/upload', formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    //update product\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        brand,\n        category,\n        description,\n        countInStock,\n        image\n      })\n    );\n  };\n\n  return (\n    <>\n      <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\n        Go back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter name..\"\n                value={name}\n                onChange={e => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"price\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter price..\"\n                value={price}\n                onChange={e => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter image url\"\n                value={image}\n                onChange={e => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File\n                id=\"image-file\"\n                label=\"Choose file\"\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId=\"brand\">\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter brand\"\n                value={brand}\n                onChange={e => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"countInStock\">\n              <Form.Label>countInStock</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter countInStock\"\n                value={countInStock}\n                onChange={e => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"category\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter category\"\n                value={category}\n                onChange={e => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"description\">\n              <Form.Label>description</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter description\"\n                value={description}\n                onChange={e => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default ProductEditScreen;\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader.js';\nimport { listOrders } from '../actions/orderActions';\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector(state => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const orderList = useSelector(state => state.orderList);\n  const { loading, orders, error } = orderList;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, userInfo]);\n\n  return (\n    <div>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map(order => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>{order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: 'red' }} />\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: 'red' }} />\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </div>\n  );\n};\n\nexport default OrderListScreen;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport loginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\nconst App = () => {\n  return (\n    <Router>\n      <>\n        <Header />\n        <main className=\"py-3\">\n          <Container>\n            <Route path=\"/login\" component={loginScreen} />\n            <Route path=\"/shipping\" component={ShippingScreen} />\n            <Route path=\"/payment\" component={PaymentScreen} />\n            <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n            <Route path=\"/order/:id\" component={OrderScreen} />\n            <Route path=\"/register\" component={RegisterScreen} />\n            <Route path=\"/profile\" component={ProfileScreen} />\n            <Route path=\"/product/:id\" component={ProductScreen} />\n            <Route path=\"/cart/:id?\" component={CartScreen} />\n            <Route path=\"/admin/userlist\" component={UserListScreen} />\n            <Route\n              path=\"/admin/productlist\"\n              component={ProductListScreen}\n              exact\n            />\n            <Route\n              path=\"/admin/productlist/:pageNumber\"\n              component={ProductListScreen}\n              exact\n            />\n\n            <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n\n            <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n            <Route\n              path=\"/admin/product/:id/edit\"\n              component={ProductEditScreen}\n            />\n            <Route path=\"/\" component={HomeScreen} exact />\n            <Route path=\"/search/:keyword\" component={HomeScreen} exact />\n            <Route path=\"/page/:pageNumber\" component={HomeScreen} exact />\n          </Container>\n        </main>\n        <Footer />\n      </>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}